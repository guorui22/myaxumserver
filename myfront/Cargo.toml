[package]
name = "myfront"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Axum Web框架依赖，headers 处理请求头，multipart 处理文件上传
axum = { version = "0.7", features = [ "multipart"] } # 基于 tokio 的 Web 框架
axum-extra = { version = "0.9", features = [] } # Axum Web框架扩展工具集
axum-macros = { version = "0.4", features = [] } # 可以使用#[debug_handler]标注获取更准确的错误提示
tokio = { version = "1", features = ["full"] } # 异步运行时
# Tower HTTP 中间件依赖
tower = { version = "0.4", features = ["limit"] } # 中间件支持
tower-http = { version = "0.5", features = ["full"] } # HTTP 中间件支持
# Sea ORM库依赖，必须启用 sqlx-mysql + runtime-tokio-native-tls 特性才能连接 MySQL 数据库
sea-orm = { version = "0.12", features = ["sqlx-mysql", "runtime-tokio-native-tls"] }
# 序列化与反序列化依赖
serde = { version = "1.0", features = ["derive"] } # 序列化与反序列化
serde_json = "1.0"# JSON 序列化与反序列化
# UUID 依赖库，生成全局唯一请求ID
uuid = { version = "1.6", features = ["v4", "fast-rng", "macro-diagnostics"] } # uuid依赖库
# 监听 Ctrl+C 退出应用
ctrlc = "3.4" # ctrl+c 退出应用
# 声明惰性加载的静态数据
lazy_static = { version = "1.4", features = [] } # 全局静态变量
# Redis 数据库连接池
deadpool-redis = { version = "0.13", features = ["serde"] }
# 文本模板工具库
askama = { version = "0.12", features = ["serde"] }
# 配置文件读取
config = "0.13" # 配置文件读取
# 日期时间处理
chrono = "0.4"   # for date and time
# 用户认证相关
libauth = { path = "../libauth" } # 用户认证相关
# 错误处理相关
liberror = { path = "../liberror" } # 自定义错误类型
# 日志处理（Tracing框架）
libtracing = { path = "../libtracing" } # 日志处理
