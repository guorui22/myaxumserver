[package]
name = "myfront"
version = "0.1.0"
edition = "2021"

[dependencies]
# Axum Web框架依赖，headers 处理请求头，multipart 处理文件上传
axum = { version = "0.7", features = [ "multipart"] } # 基于 tokio 的 Web 框架
axum-extra = { version = "0.9", features = [] } # Axum Web框架扩展工具集
axum-macros = { version = "0.4", features = [] } # 可以使用#[debug_handler]标注获取更准确的错误提示
tokio = { version = "1", features = ["full"] } # 异步运行时
# Tower HTTP 中间件依赖
tower = { version = "0.4", features = ["limit"] } # 中间件支持
tower-http = { version = "0.5", features = ["full"] } # HTTP 中间件支持
# 序列化与反序列化依赖
serde = { version = "1.0", features = ["derive"] } # 序列化与反序列化
serde_json = "1.0"# JSON 序列化与反序列化
# UUID 依赖库，生成全局唯一请求ID
uuid = { version = "1.6", features = ["v4", "fast-rng", "macro-diagnostics"] } # uuid依赖库
# 监听 Ctrl+C 退出应用
ctrlc = "3.4" # ctrl+c 退出应用
# 文本模板工具库
askama = { version = "0.12", features = ["serde"] }
# 日期时间处理
chrono = "0.4"   # for date and time
# 错误处理相关
liberror = { path = "../liberror" } # 自定义错误类型
# 日志处理（Tracing框架）
libtracing = { path = "../libtracing" } # 日志处理
# 全局唯一请求ID（用于日志追踪）
libglobal_request_id = { path = "../libglobal_request_id" } # 日志处理
# 读写配置文件
libconfig = { path = "../libconfig" } # 读取配置文件内容
# 数据库连接池（MySQL、Redis）
libdatabase = { path = "../libdatabase" } # 数据库访问
# 金额计算(sqlx-mysql v0.7.3 依赖于 bigdecimal v0.3.0)
bigdecimal = { version = "0.3", features = ["serde"] } # 处理货币金额

my_default_macro_derive = { path = "./my_default_macro_derive" }
futures = "0.3"
rand = "0.8.5"

[dev-dependencies]
rust_decimal = "1.33.1"
rust_decimal_macros = "1.33.1"
lazy_static = "1.4.0"
#my_default_macro_derive = { path = "../my_default_macro_derive" }
