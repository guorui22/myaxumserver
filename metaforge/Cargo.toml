[package]
name = "metaforge"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Axum Web框架依赖，multipart 处理文件上传
axum = { version = "0.7", features = [ "multipart"] } # 基于 tokio 的 Web 框架，multipart 特性用于处理文件上传
axum-macros = { version = "0.4", features = [] } # 可以使用#[debug_handler]标注获取更准确的错误提示
axum-extra = { version = "0.9", features = ["typed-header"] } # Axum Web框架扩展
tokio = { version = "1", features = ["full"] } # Rust 异步运行时
# Tower HTTP 中间件依赖
tower = { version = "0.4", features = ["limit"] } # ConcurrencyLimitLayer 服务并发限制中间件支持
tower-http = { version = "0.5.2", features = ["full"] } # HTTP 中间件支持
# 序列化与反序列化依赖
serde = { version = "1.0", features = ["derive"] } # 序列化与反序列化
serde_json = "1.0"# JSON 序列化与反序列化
# UUID 依赖库，生成全局唯一请求ID
uuid = { version = "1.8", features = [] } # uuid依赖库
# 监听 Ctrl+C 退出应用
ctrlc = { version = "3.4" } # ctrl+c 退出应用
# 文本模板工具库
askama = { version = "0.12", features = [] }
# 日期时间处理
chrono = { version = "0.4" }   # for date and time
# 日志处理（Tracing框架）
libtracing = { path = "../libtracing" } # 日志处理
# 读写配置文件
libconfig = { path = "../libconfig" } # 读取配置文件内容
# 数据库连接池（MySQL、Redis）
libdatabase = { path = "../libdatabase" } # 数据库访问
# 金额计算(sqlx-mysql v0.7.3 依赖于 bigdecimal v0.3.0)
bigdecimal = { version = "0.3", features = ["serde"] } # 处理货币金额
# proto 文件生成 Rust 接口依赖
libproto = { path = "../libproto" }
# grpc-server 服务器构建依赖
tonic = { version = "0.11" }
# 使用 tera 模板库制作 JavaScript & TypeScript 代码脚本模版
tera = { version = "1" }
# 基于trait对象的错误类型，用于统一错误处理
anyhow = { version = "1.0" }
# 获取 CPU 内核数量
num_cpus = { version = "1.16" }
# 用于声明延迟计算的静态数据，通常用在需要全局状态管理或初始化成本较高的资源时
lazy_static = "1.4"
# 密码加密解密
bcrypt = { version = "0.15" }
# jwt token
jsonwebtoken = { version = "9.3" }
# 自定义错误类型
thiserror = "1.0"
# proto 文件生成 Rust 接口依赖
prost-types = "0.12"
# 随机生成器
rand = "0.8"
# AES 加密算法库
aes = "0.8"
# AES CTR 模式对称加密实现
ctr = "0.9"
# 配合 AES 加密使用的字节数组与十六进制字符串的快速转换工具
const-hex = "1.12"

[dev-dependencies]
